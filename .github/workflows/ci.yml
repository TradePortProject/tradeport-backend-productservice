name: "CI - Backend Product - Build, Test & Security Scan"

on:
  push:
    branches:
      - main
      - "feature/**"
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: üìê .NET Environment Setup
    runs-on: ubuntu-latest
    outputs:
      dotnet-restore-cache-hit: ${{ steps.cache-dotnet.outputs.cache-hit }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Cache NuGet packages
        id: cache-dotnet
        uses: actions/cache@v3
        with:
          path: |
            ~/.nuget/packages
            **/bin
            **/obj
          key: ${{ runner.os }}-dotnet-${{ hashFiles('**/*.csproj') }}

      - name: Restore Dependencies
        run: dotnet restore --force

  lint:
    name: üßπ Code Style Check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Run dotnet format
        continue-on-error: true
        run: |
          dotnet format --verify-no-changes --verbosity diagnostic > lint-report.txt || true

      - name: Upload Lint Report
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: lint-report.txt
          retention-days: 3

  build:
    name: üèóÔ∏è Build .NET Service
    runs-on: ubuntu-latest
    needs: [setup, lint]
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build Solution
        run: dotnet build --configuration Release

      - uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            **/bin/Release/**
            **/publish/**
          retention-days: 1

  security-scan:
    name: üõ°Ô∏è NuGet Security Scan
    runs-on: ubuntu-latest
    needs: [build]

    permissions:
      contents: read
      security-events: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Scan for Vulnerable Packages
        run: |
          dotnet list package --vulnerable --include-transitive > security-report.txt || true
          if grep -qi "severity.*high\|severity.*critical" security-report.txt; then
            echo "‚ö†Ô∏è High/Critical vulnerabilities found ‚Äî please review manually"
            grep -i "severity" security-report.txt || true
          else
            echo "‚úÖ No high/critical vulnerabilities"
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: security-report.txt
          retention-days: 7
